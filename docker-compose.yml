version: '3.8'

services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
      args:
        - UID=1000
        - GID=1000
        - USERNAME=${USERNAME}
        - GROUP_NAME=${GROUP_NAME}
    container_name: backend-fox-holiday-homes
    working_dir: /var/www/backend
    volumes:
      - ./backend:/var/www/backend
    environment:
      - VIRTUAL_HOST=api.fox-holiday-homes.test
      - LETSENCRYPT_HOST=api.fox-holiday-homes.test
      - LETSENCRYPT_EMAIL=twoj-email@example.com
      - APP_ENV=dev
      - APP_DEBUG=1
      - SYMFONY_SERVER_HOST=0.0.0.0
    networks:
      - network-fox-holiday-homes
    depends_on:
      - db
    expose:
      - "9000"
    command: >
      sh -c "
        composer install --no-interaction --optimize-autoloader --no-scripts &&
        php-fpm
      "

  frontend:
    image: node:20
    container_name: frontend-fox-holiday-homes
    working_dir: /app
    volumes:
      - ./frontend:/app
      - ./nginx/certs:/etc/nginx/certs:ro
    command: sh -c "npm install && npm run dev -- --host 0.0.0.0 --port 5173"
    networks:
      - network-fox-holiday-homes
    expose:
      - "5173"

  nginx:
    image: nginx:latest
    container_name: nginx
    depends_on:
      - backend
      - frontend
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
      - ./nginx/certs:/etc/nginx/certs:ro
      - ./frontend/dist:/var/www/frontend:ro
      - ./backend/public:/var/www/backend:ro
    networks:
      - network-fox-holiday-homes

  db:
    image: postgres:16
    restart: always
    container_name: postgres_db_fox_holiday
    environment:
      POSTGRES_DB: ${DATABASE}
      POSTGRES_USER: ${DATABASE_USER}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - network-fox-holiday-homes

volumes:
  pgdata:

networks:
  network-fox-holiday-homes:
    driver: bridge
